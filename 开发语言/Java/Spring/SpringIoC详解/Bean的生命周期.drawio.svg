<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="721px" height="816px" viewBox="-0.5 -0.5 721 816" content="&lt;mxfile host=&quot;drawio-plugin&quot; modified=&quot;2024-06-26T03:52:24.159Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot; etag=&quot;P35zNTUzsI9uJf1owMDq&quot; version=&quot;22.1.22&quot; type=&quot;embed&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><path d="M 153.51 54 L 153.51 67.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.51 72.88 L 150.01 65.88 L 153.51 67.63 L 157.01 65.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="119.52" y="14" width="67.99" height="40" rx="6" ry="6" fill="#d5e8d4" stroke="#82b366" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="40">实例化</text></g><path d="M 153.5 114 L 153.5 134 L 153.5 114 L 153.5 127.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.5 132.88 L 150 125.88 L 153.5 127.63 L 157 125.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="109.52" y="74" width="87.99" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="100">填充属性</text></g><path d="M 153.5 174 L 153.5 187.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.5 192.88 L 150 185.88 L 153.5 187.63 L 157 185.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="57.02" y="134" width="192.99" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="151">调用 BeanNameAware 的</text><text x="153.01" y="169"> setBeanName() 方法</text></g><path d="M 153.54 234 L 153.54 254 L 153.54 234 L 153.54 247.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.54 252.88 L 150.04 245.88 L 153.54 247.63 L 157.04 245.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="53.27" y="194" width="200.49" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="211">调用 BeanFactoryAware 的 </text><text x="153.01" y="229">setBeanFactory() 方法</text></g><path d="M 153.54 294 L 153.54 307.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.54 312.88 L 150.04 305.88 L 153.54 307.63 L 157.04 305.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="30.96" y="254" width="245.12" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.02" y="271">调用 ApplicationContextAware 的 </text><text x="153.02" y="289">setApplicationContext() 方法</text></g><path d="M 153.51 354 L 153.52 367.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.52 372.88 L 150.02 365.88 L 153.52 367.63 L 157.02 365.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="19.52" y="314" width="267.99" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="340">调用 BeanPostProcessor 的预初始化</text></g><path d="M 153.52 414 L 153.51 427.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.51 432.88 L 150.01 425.88 L 153.51 427.63 L 157.01 425.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="55.46" y="374" width="197.05" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.49" y="391">调用 InitlalizingBean 的 </text><text x="153.49" y="409">afterPropertiesSet() 方法</text></g><path d="M 153.54 474 L 153.54 487.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 153.54 492.88 L 150.04 485.88 L 153.54 487.63 L 157.04 485.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="63.98" y="434" width="179.06" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.01" y="460">调用自定义的初始化方法</text></g><path d="M 153.98 534 L 154.05 553.1" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 154.08 558.35 L 150.55 551.37 L 154.05 553.1 L 157.55 551.34 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="50.1" y="494" width="207.76" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.48" y="511">调用 BeanPostProcessor的</text><text x="153.48" y="529">初始后方法</text></g><path d="M 1 594 L 303 594" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="6 6" pointer-events="stroke"/><path d="M 154.1 629.3 L 154.1 647.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 154.1 652.88 L 150.6 645.88 L 154.1 647.63 L 157.6 645.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 154.06 694 L 154.06 714 L 154.06 696 L 154.06 709.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 154.06 714.88 L 150.56 707.88 L 154.06 709.63 L 157.56 707.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="57.95" y="654" width="192.06" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.48" y="671">调用 DisposableBean 的 </text><text x="153.48" y="689">destroy() 方法</text></g><rect x="67.95" y="716" width="172.06" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.48" y="742">调用自定义的销毁方法</text></g><path d="M 313.01 814 L 313 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 333.01 34 L 187.51 34" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="26.5" width="151.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="40">Spring 对 Bean 进行实例化</text></g><rect x="333.01" y="86.5" width="261.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="100">Spring 将值和 Bean 的引用注入 Bean 的属性中</text></g><path d="M 333.01 94 L 197.51 94" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="146.5" width="271.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="151">如果 Bean 实现了 BeanNameAware 接口，Spring 将 </text><text x="334.51" y="169">Bean 的 ID 传递给 setBeanName() 方法 </text></g><path d="M 333.01 154 L 250.01 154" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="206.5" width="311.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="211">如果 Bean 实现了 BeanFactoryAware 接口，Spring 将调</text><text x="334.51" y="229">用 setBeanFactory() 方法，将 BeanFactory 容器实例传入 </text></g><path d="M 333.01 214 L 253.76 214" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="266.5" width="331.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="262">如果 bean 实现了 ApplicationContextAware 接口，</text><text x="334.51" y="280">Spring 将调用 setApplicationContext() 方法，</text><text x="334.51" y="298">将 bean 所在的应用上下文的引用传入进来 </text></g><path d="M 333.01 274 L 276.08 274" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="326.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="331">如果 bean 实现了 BeanPostProcessor 接口，Spring 将</text><text x="334.51" y="349">调用它们的 postProcessBeforeInitialization() 方法</text></g><path d="M 333.01 334 L 287.51 334" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="386.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="382">如果 bean 实现了 InitializingBean 接口，Spring 将调用</text><text x="334.51" y="400">它们的 afterPropertiesSet() 方法。类似地，如果bean</text><text x="334.51" y="418">使用 initmethod 声明了初始化方法，该方法也会被调用</text></g><path d="M 333.01 394 L 252.51 394" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="506.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="511">如果 bean 实现了 BeanPostProcessor 接口，Spring 将</text><text x="334.51" y="529">调用它们的 postProcessAfterInitialization() 方法</text></g><path d="M 333.01 514 L 257.86 514" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="335" y="567" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="336.5" y="571.5">bean 已经准备就绪，可以被应用程序使用了，它们将</text><text x="336.5" y="589.5">一直驻留在应用上下文中，直到该应用上下文被销毁</text></g><path d="M 335 574.5 L 269.5 574.5 L 204.08 574.11" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="333.01" y="666.5" width="301.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="15px"><text x="334.51" y="662">如果 bean 实现了 DisposableBean 接口，Spring 将调用</text><text x="334.51" y="680">它的 destroy() 接口方法。同样，如果 bean 使用 </text><text x="334.51" y="698">destroy-method 声明了销毁方法，该方法也会被调用</text></g><path d="M 333.01 674 L 250.01 674" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><ellipse cx="153.99" cy="780" rx="3" ry="3" fill="rgb(0, 0, 0)" stroke="none" pointer-events="all"/><rect x="133.99" y="760" width="40" height="40" fill="none" stroke="none" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.49" y="796">END</text></g><path d="M 154.06 756 L 154.06 776 L 154.1 773.63" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 154.01 778.88 L 150.62 771.83 L 154.1 773.63 L 157.62 771.94 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><rect x="103.98" y="559.5" width="100" height="30" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.48" y="580.5">初始后调用</text></g><rect x="98.99" y="599" width="110" height="30" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.49" y="620">bean 销毁时</text></g><rect x="30.96" y="374" width="245.12" height="40" rx="6" ry="6" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="15px"><text x="153.02" y="391">调用 ApplicationContextAware 的 </text><text x="153.02" y="409">setApplicationContext() 方法</text></g></g></svg>