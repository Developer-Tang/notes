<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="763px" height="862px" viewBox="-0.5 -0.5 763 862" content="&lt;mxfile host=&quot;drawio-plugin&quot; modified=&quot;2024-06-11T03:14:41.289Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot; etag=&quot;7KJGz873mPgCguHtyQ8H&quot; version=&quot;22.1.22&quot; type=&quot;embed&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><path d="M 201.01 100 L 201.01 113.63" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.01 118.88 L 197.51 111.88 L 201.01 113.63 L 204.51 111.88 Z" fill="#666666" stroke="#666666" stroke-miterlimit="10" pointer-events="all"/><rect x="141.01" y="60" width="120" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="84.5">实例化</text></g><path d="M 201 160 L 201 180 L 201 160 L 201 173.63" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201 178.88 L 197.5 171.88 L 201 173.63 L 204.5 171.88 Z" fill="#666666" stroke="#666666" stroke-miterlimit="10" pointer-events="all"/><rect x="141.01" y="120" width="120" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="144.5">填充属性</text></g><path d="M 201 220 L 201 240 L 201 220 L 201 233.63" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201 238.88 L 197.5 231.88 L 201 233.63 L 204.5 231.88 Z" fill="#666666" stroke="#666666" stroke-miterlimit="10" pointer-events="all"/><rect x="66.01" y="180" width="270" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="204.5">调用 BeanNameAware 的 setBeanName() 方法</text></g><path d="M 201 280 L 201 293.63" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201 298.88 L 197.5 291.88 L 201 293.63 L 204.5 291.88 Z" fill="#666666" stroke="#666666" stroke-miterlimit="10" pointer-events="all"/><rect x="58.51" y="240" width="285" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="264.5">调用 BeanFactoryAware 的 setBeanFactory() 方法</text></g><path d="M 201.05 340 L 201.05 353.63" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.05 358.88 L 197.55 351.88 L 201.05 353.63 L 204.55 351.88 Z" fill="#666666" stroke="#666666" stroke-miterlimit="10" pointer-events="all"/><rect x="24.76" y="300" width="352.5" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="324.5">调用 ApplicationContextAware 的 setApplicationContext() 方法</text></g><path d="M 201.05 400 L 201.05 413.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.05 418.88 L 197.55 411.88 L 201.05 413.63 L 204.55 411.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="82.89" y="360" width="236.25" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="384.5">调用 BeanPostProcessor 的预初始化</text></g><path d="M 201.05 460 L 201.05 480 L 201.05 460 L 201.05 473.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.05 478.88 L 197.55 471.88 L 201.05 473.63 L 204.55 471.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="61.95" y="420" width="278.12" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="444.5">调用 InitlalizingBean 的 afterPropertiesSet() 方法</text></g><path d="M 201.05 520 L 201.05 533.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.05 538.88 L 197.55 531.88 L 201.05 533.63 L 204.55 531.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="111.48" y="480" width="179.06" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="504.5">调用自定义的初始化方法</text></g><path d="M 201.01 580 L 201.01 603.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 201.01 608.88 L 197.51 601.88 L 201.01 603.63 L 204.51 601.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="81.24" y="540" width="239.53" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.51" y="564.5">调用 BeanPostProcessor 的初始后方法</text></g><path d="M 1 640 L 401 640" fill="none" stroke="rgb(0, 0, 0)" stroke-width="2" stroke-miterlimit="10" stroke-dasharray="2 2" pointer-events="stroke"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-anchor="middle" font-size="11px"><text x="204.59" y="624.62">初始后调用</text><text x="204.59" y="663.62">bean 销毁时</text></g><path d="M 201.01 670 L 201 693.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 201 698.88 L 197.5 691.88 L 201 693.63 L 204.5 691.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 200.95 740 L 200.95 760 L 200.95 750 L 200.95 763.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 200.95 768.88 L 197.45 761.88 L 200.95 763.63 L 204.45 761.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="86.94" y="700" width="228.12" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.5" y="724.5">调用 DisposableBean 的 destroy() 方法</text></g><rect x="86.94" y="770" width="228.12" height="40" rx="6" ry="6" fill="#f5f5f5" stroke="#666666" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.5" y="794.5">调用自定义的销毁方法</text></g><path d="M 411.01 860 L 411.01 0" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="1 1" pointer-events="stroke"/><path d="M 431.01 80 L 261.01 80" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="72.5" width="151.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="84.5">Spring 对 Bean 进行实例化</text></g><rect x="431.01" y="132.5" width="261.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="144.5">Spring 将值和 Bean 的引用注入 Bean 的属性中</text></g><path d="M 431.01 140 L 261.01 140" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="192.5" width="271.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="197.5">如果 Bean 实现了 BeanNameAware 接口，Spring 将 </text><text x="432.51" y="211.5">Bean 的 ID 传递给 setBeanName() 方法 </text></g><path d="M 431.01 200 L 336.01 200" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="252.5" width="311.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="257.5">如果 Bean 实现了 BeanFactoryAware 接口，Spring 将</text><text x="432.51" y="271.5">调用 setBeanFactory() 方法，将 BeanFactory 容器实例传入 </text></g><path d="M 431.01 260 L 343.51 260" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="312.5" width="331.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="310.5">如果 bean 实现了 ApplicationContextAware 接口，Spring 将</text><text x="432.51" y="324.5">调用 setApplicationContext() 方法，将 bean 所在的应用上下</text><text x="432.51" y="338.5">文的引用传入进来 </text></g><path d="M 431.01 320 L 377.26 320" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="372.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="377.5">如果 bean 实现了 BeanPostProcessor 接口，Spring 将调用</text><text x="432.51" y="391.5">它们的 postProcessBeforeInitialization() 方法</text></g><path d="M 431.01 380 L 319.14 380" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="432.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="430.5">如果 bean 实现了 InitializingBean 接口，Spring 将调用</text><text x="432.51" y="444.5">它们的 afterPropertiesSet() 方法。类似地，如果bean</text><text x="432.51" y="458.5">使用 initmethod 声明了初始化方法，该方法也会被调用；</text></g><path d="M 431.01 440 L 340.07 440" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="552.5" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="557.5">如果 bean 实现了 BeanPostProcessor 接口，Spring 将</text><text x="432.51" y="571.5">调用它们的 postProcessAfterInitialization() 方法</text></g><path d="M 431.01 560 L 320.77 560" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="433" y="613" width="300" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="434.5" y="618">bean 已经准备就绪，可以被应用程序使用了，它们将</text><text x="434.5" y="632">一直驻留在应用上下文中，直到该应用上下文被销毁</text></g><path d="M 433 620 L 233 620" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><rect x="431.01" y="712.5" width="301.99" height="15" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px"><text x="432.51" y="710.5">如果 bean 实现了 DisposableBean 接口，Spring 将调用</text><text x="432.51" y="724.5">它的 destroy() 接口方法。同样，如果 bean 使用 </text><text x="432.51" y="738.5">destroy-method 声明了销毁方法，该方法也会被调用</text></g><path d="M 431.01 720 L 315.06 720" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><ellipse cx="201" cy="840" rx="3" ry="3" fill="#666666" stroke="none" pointer-events="all"/><rect x="181" y="820" width="40" height="40" fill="none" stroke="none" pointer-events="all"/><g fill="#333333" font-family="Helvetica" text-anchor="middle" font-size="12px"><text x="200.5" y="854.5">END</text></g><path d="M 200.95 810 L 200.95 830 L 200.97 833.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 200.99 838.88 L 197.46 831.9 L 200.97 833.63 L 204.46 831.87 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></svg>